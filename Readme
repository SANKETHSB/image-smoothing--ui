README: |
  # 🎨 Image Smoothing Filter UI

  This project is a simple **client-side image smoothing filter tool** built with **pure HTML, CSS, and JavaScript** using the **Canvas API**.

  It demonstrates:

  - Uploading and displaying images in the browser
  - Accessing and manipulating pixel data with the Canvas API
  - Applying a pixel neighborhood averaging (blur) filter with configurable kernel size
  - Optional grayscale conversion before smoothing
  - Displaying live pixel (R, G, B, A) values when hovering over the image

  ---

  ## 📸 Features

  - **Image Upload:** Upload any image from your device
  - **Original Image Display:** See the original image rendered on a canvas
  - **Grayscale Option:** Convert the image to grayscale before applying the smoothing filter
  - **Neighborhood Size:** Select either a 3×3 or 5×5 kernel for the smoothing filter
  - **Smooth Image:** Apply the smoothing filter and view the output on a second canvas
  - **Pixel Info on Hover:** Hover over the original image to view the RGBA values of the pixel under the cursor

  ---

  ## 🚀 How to Run

  1. **Clone this repository**

     ```bash
     git clone https://github.com/YOUR_USERNAME/YOUR_REPO_NAME.git
     cd YOUR_REPO_NAME
     ```

  2. **Open `index.html`** in your web browser.

  That’s it! No build tools or server needed — it runs entirely in the browser.

  ---

  ## ⚙ Tech Stack

  - **HTML5** – Structure
  - **Vanilla JavaScript** – Core logic
  - **Canvas API** – Pixel-level image processing and display
  - **CSS** – Basic styling

  ---

  ## 📚 How It Works

  - **Image Upload:** Uses the `FileReader` API to load an image and draw it on a canvas.
  - **Pixel Processing:** Uses `getImageData()` to access pixel data. If grayscale is selected, each pixel’s RGB values are averaged.
  - **Smoothing Filter:** Applies a neighborhood average using a 3×3 or 5×5 kernel, then renders the smoothed image to another canvas.
  - **Pixel Hover Info:** Tracks mouse position on the canvas and displays the real-time RGBA values of the hovered pixel.

  ---

  ## ✏️ Author

  This project was built as a hands-on UI coding assignment to demonstrate frontend development skills using only core web technologies.

  ---

  ## ✅ License

  This project is **open source** — feel free to reuse it for learning or personal projects.

  ---

  ## 📌 Live Demo (Optional)

  Want to host it with GitHub Pages?

  1. Push your code to the `main` branch.
  2. Go to: **Repository Settings → Pages → Source → Select `main` branch → `/ (root)`**
  3. Share the link with others!

  ---

  ## ✅ Where to Put This

  1. Save this text as `README.md` in your project root folder.
  2. Commit & push:

     ```bash
     git add README.md
     git commit -m "Add project README"
     git push
     ```

  🎉 That’s it — your GitHub repo now looks clean, complete, and professional!

  ---

  ## 📣 Want a Project Description?

  If you'd like a short one-line project description to display under the repo title on GitHub, just say:

  **Yes, add project description!** 🚀
