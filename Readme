# Image Smoothing Filter UI

This project is a simple *client-side image smoothing filter tool* built with *pure HTML, CSS, and JavaScript* using the *Canvas API*.

It demonstrates:
- Uploading and displaying images in the browser
- Accessing and manipulating pixel data with the Canvas API
- Applying a pixel neighborhood averaging (blur) filter with configurable kernel size
- Optional grayscale conversion before smoothing
- Displaying live pixel (R,G,B,A) values when hovering over the image

---

## 📸 *Features*

- *Image Upload:* Upload any image from your device.
- *Original Image Display:* See the original image on a canvas.
- *Grayscale Option:* Convert the image to grayscale before applying the smoothing filter.
- *Neighborhood Size:* Select a 3×3 or 5×5 neighborhood for the smoothing filter.
- *Smooth Image:* Apply the filter and display the processed image on a second canvas.
- *Pixel Info on Hover:* Hover over the original image to see the RGBA values of the pixel under the cursor.

---

## 🚀 *How to Run*

1. *Clone this repo*

   ```bash
   git clone https://github.com/YOUR_USERNAME/YOUR_REPO_NAME.git
   cd YOUR_REPO_NAME

step2 :- Open index.html in your web browser.

That’s it! No build tools or server needed — it runs fully in the browser.

⚙ Tech Used
HTML5 for structure

Vanilla JavaScript for logic

Canvas API for pixel data processing and display

CSS for minimal styling

📚 How It Works
Image Upload: Uses the FileReader API to load an image and draw it on the canvas.

Pixel Processing: Gets pixel data with getImageData(). If grayscale is selected, each pixel’s RGB is averaged into one channel.

Neighborhood Blur: Uses nested loops to average surrounding pixels (3×3 or 5×5 neighborhood) and writes the new data to a separate canvas.

Hover Pixel Info: On mouse move, reads the pixel under the cursor and shows its RGBA value live.

✏ Author
This project was built as a hands-on UI coding assignment for demonstrating frontend coding skills.

✅ License
This project is open source — feel free to reuse for learning and personal projects.

📌 Live Demo (Optional)
If you want, you can host this with GitHub Pages for quick demo:

Push to main branch.

Go to Repo Settings → Pages → Source → main branch → /root.

Share the link!

Enjoy! 🚀

yaml
Copy code

---

## ✅ *Where to put it*

1️⃣ Save the text above as **README.md** in your repo folder.  
2️⃣ Commit & push:
```bash
git add README.md
git commit -m "Add README"
git push
🎉 That’s it — now your GitHub looks complete, clear, and professional!
If you’d like, I can help you write a one-line project description for your repo too — just say “Yes, add project description!” 🚀

